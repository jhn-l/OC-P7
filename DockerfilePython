
#ENV JUPYTER_WORKDIR ./wordir/
FROM debian:12-slim

ENV PYTHONUNBUFFERED 1

WORKDIR /code/

RUN apt-get update && apt-get install -y --no-install-recommends apt-utils nano wkhtmltopdf net-tools
RUN apt update && apt upgrade --yes && apt install sudo locales --yes \
    && rm -rf /var/lib/apt/lists/* && localedef -i fr_FR -c -f UTF-8 -A \
    /usr/share/locale/locale.alias fr_FR.UTF-8 
ENV LANG fr_FR.utf8

RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 python3-dev python3-pip python3-venv\
    ipython3 vim git curl libgomp1

# Installer Node.js
# RUN apt-get update && apt-get install -y curl \
#     && curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - \
#     && apt-get install -y nodejs \
#     && apt-get clean

# Cr√©er le dossier /tmp/mlruns/artifacts
RUN mkdir -p /tmp/mlruns/

# Set up and activate virtual environment
#ENV VIRTUAL_ENV "venv/"
RUN python3 -m venv /opt/venv
ENV PATH "/opt/venv/bin:$PATH"
COPY ./data/requirements2.txt /code/requirements.txt

RUN pip3 install --upgrade pip

RUN pip3 install -Ur requirements.txt

CMD ["mlflow", "server", "--backend-store-uri", "postgresql://postgres:postgres@postgres/mydb", "--default-artifact-root", "/tmp/mlruns/", "--host", "0.0.0.0", "--port", "5000"]
#CMD ["mlflow", "server", "--backend-store-uri", "sqlite:///mlflow.db", "--default-artifact-root", "/mlruns", "--host", "0.0.0.0", "--port", "5000"]
#mlflow server --backend-store-uri postgresql://postgres:postgres@postgres/mydb --default-artifact-root /tmp/mlruns/artifacts --host 0.0.0.0 --port 5000